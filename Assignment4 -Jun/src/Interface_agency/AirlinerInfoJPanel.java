/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface_agency;

import Business.Airliners;
import Business.Airplane;
import Business.Flight;
import Business.MapStore;
import Interface_agency.ReserveJPanel;
import Interface_airliner.AirlineViewJPanel;
import java.awt.CardLayout;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author zhanghaojie
 */
public class AirlinerInfoJPanel extends javax.swing.JPanel {

    /**
     * Creates new form AirlinerInfoJPanel
     */
    private JPanel XJpanel;

    private Map customerMap;
    private MapStore mapstore;
    private Airliners airliners;
    
    public AirlinerInfoJPanel(JPanel XJpanel, MapStore mapstore) {
        
        initComponents();        
        this.XJpanel = XJpanel;
        this.mapstore=mapstore;
        
        fullTable();
    }
    
      private void fullTable() {
        DefaultTableModel dtm = (DefaultTableModel) airlinerInfojTable.getModel();
        dtm.setRowCount(0);
        for (Map.Entry<Integer, Airliners> i : mapstore.getInstance().getAirlinerMap().entrySet()) {       
                    Object row[] = new Object[dtm.getColumnCount()];
                    Airliners airliner = i.getValue();
                    row[0] = airliner.getAirlinerNumber();
                    row[1] = airliner.getDeparturalTime();
                    row[2] = airliner.getDeparturalCity();
                    row[3] = airliner.getArrivalTime();
                    row[4] = airliner.getArrivalCity();       
                    dtm.addRow(row); 
        }
    }
    
   

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        airlinerInfojTable = new javax.swing.JTable();
        backjButton = new javax.swing.JButton();
        viewjButton = new javax.swing.JButton();
        reservejButton = new javax.swing.JButton();

        airlinerInfojTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "FlightNumber", "DepartureTime", "DepartureCity", "ArrivalTime", "ArrivalCity"
            }
        ));
        jScrollPane1.setViewportView(airlinerInfojTable);

        backjButton.setFont(new java.awt.Font("Lucida Grande", 2, 16)); // NOI18N
        backjButton.setText("<Back");
        backjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backjButtonActionPerformed(evt);
            }
        });

        viewjButton.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        viewjButton.setText("View");
        viewjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewjButtonActionPerformed(evt);
            }
        });

        reservejButton.setFont(new java.awt.Font("Lucida Grande", 1, 16)); // NOI18N
        reservejButton.setText("Reserve");
        reservejButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                reservejButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backjButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 510, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(viewjButton)
                        .addGap(49, 49, 49)
                        .addComponent(reservejButton)))
                .addContainerGap(69, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(31, 31, 31)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 448, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(backjButton)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(viewjButton)
                    .addComponent(reservejButton))
                .addContainerGap(36, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void backjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backjButtonActionPerformed
        this.XJpanel.add(new TravelManageJPanel(this.XJpanel, mapstore));
        CardLayout cLayout = (CardLayout) this.XJpanel.getLayout();
        cLayout.next(this.XJpanel);
    }//GEN-LAST:event_backjButtonActionPerformed

    private void viewjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewjButtonActionPerformed
         int getrow = airlinerInfojTable.getSelectedRow();
        if(getrow>=0){
            for (Map.Entry<Integer, Airliners> entry : mapstore.getInstance().getAirlinerMap().entrySet()) {  
                Airliners value = entry.getValue();
                if (value.getAirlinerNumber().equals(airlinerInfojTable.getValueAt(getrow, 0))) {
                    AirlineViewJPanel panel = new AirlineViewJPanel(XJpanel, value);
                     this.XJpanel.add(panel);
                       CardLayout layout = (CardLayout) XJpanel.getLayout();
                       layout.next(XJpanel);
                }
            }
        }else
            JOptionPane.showMessageDialog(null, "Please select a row!");
    }//GEN-LAST:event_viewjButtonActionPerformed

    private void reservejButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_reservejButtonActionPerformed
        
         int getrow = airlinerInfojTable.getSelectedRow();
         if(getrow>=0){
           
            for (Map.Entry<Integer, Airliners> entry : mapstore.getInstance().getAirlinerMap().entrySet()) {                        
                
                Airliners value = entry.getValue();
                
                System.out.println(value);
               
                if (value.getAirlinerNumber()==(airlinerInfojTable.getValueAt(getrow, 0))) {
                    
                    ReserveJPanel panel = new ReserveJPanel(XJpanel, mapstore, value);
                    this.XJpanel.add(panel);
                    CardLayout layout = (CardLayout) XJpanel.getLayout();
                    layout.next(XJpanel);
                }
            }
            
          
        }else
            JOptionPane.showMessageDialog(null, "Please select a row!");
        
    }//GEN-LAST:event_reservejButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable airlinerInfojTable;
    private javax.swing.JButton backjButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton reservejButton;
    private javax.swing.JButton viewjButton;
    // End of variables declaration//GEN-END:variables
}
