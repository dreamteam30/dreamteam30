/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Interface_customer;

import java.awt.CardLayout;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import Business.*;
import Interface_airliner.AirlineViewJPanel;
import java.util.Map;
import javax.swing.JOptionPane;

/**
 *
 * @author wang
 */
public class CustomerInformationJPanel extends javax.swing.JPanel {

    /**
     * Creates new form CustomerInformation
     */
    private JPanel RightJPanel;
    //private Customer customerDir;
    private Map<Integer, Customer> customerMap;
    private MapStore mapstore;
    public CustomerInformationJPanel(JPanel RightJPanel, MapStore mapstore) {
        initComponents();
        this.RightJPanel = RightJPanel;
        this.customerMap = customerMap;
        this.mapstore = mapstore;
        initData();
    }
    

    private void initData() {
        DefaultTableModel dTable = (DefaultTableModel) jTable.getModel();
        dTable.setRowCount(0);

        for (Map.Entry<Integer, Customer> i : this.mapstore.getInstance().getCustomer().entrySet()) {
            Object row[] = new Object[4];

            Customer c = i.getValue();
            row[0] = c.getUserID();
            row[1] = c.getFirstName();
            row[2] = c.getLastName();
            row[3] = c.getPersonalId();
            dTable.addRow(row);
        }
    }
    
    
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable = new javax.swing.JTable();
        BackBtn = new javax.swing.JButton();
        ViewBtn = new javax.swing.JButton();
        CreateBtn = new javax.swing.JButton();
        DeleteBtn = new javax.swing.JButton();

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Customer Information");

        jTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "User ID", "First Name", "Second Name", "Personal ID"
            }
        ));
        jScrollPane1.setViewportView(jTable);

        BackBtn.setText("Back");
        BackBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackBtnActionPerformed(evt);
            }
        });

        ViewBtn.setText("View ");
        ViewBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewBtnActionPerformed(evt);
            }
        });

        CreateBtn.setText("Create");
        CreateBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CreateBtnActionPerformed(evt);
            }
        });

        DeleteBtn.setText("Delete");
        DeleteBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(309, 309, 309)
                            .addComponent(jLabel1))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(193, 193, 193)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 473, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addComponent(BackBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ViewBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(CreateBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(DeleteBtn)))
                .addContainerGap(47, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 353, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ViewBtn)
                    .addComponent(CreateBtn)
                    .addComponent(DeleteBtn)
                    .addComponent(BackBtn))
                .addContainerGap(23, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void BackBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackBtnActionPerformed
        // TODO add your handling code here:
        RightJPanel.remove(this);
        CardLayout cLayout = (CardLayout) RightJPanel.getLayout();
        cLayout.previous(RightJPanel);
    }//GEN-LAST:event_BackBtnActionPerformed

    private void CreateBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CreateBtnActionPerformed
        // TODO add your handling code here:
        //RightJPanel.remove(this);
        this.RightJPanel.add(new CustomerCreateJPanel(RightJPanel, this.mapstore));
        CardLayout cLayout = (CardLayout) RightJPanel.getLayout();
        cLayout.next(this.RightJPanel);
    }//GEN-LAST:event_CreateBtnActionPerformed

    private void DeleteBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = jTable.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select at least a row.", "CREATE", JOptionPane.ERROR_MESSAGE);
            //return;
        }

        //Customer customer = (Customer) jTable.getValueAt(selectedRow, col);
        for(Map.Entry<Integer, Customer> a : this.mapstore.getInstance().getCustomer().entrySet()){
            int al = Integer.parseInt(jTable.getValueAt(selectedRow,0).toString());
            Customer cus = a.getValue();
            if(al==(cus.getUserID()))
                this.mapstore.getInstance().getCustomer().remove(cus.getUserID());
        }
        initData();
    }//GEN-LAST:event_DeleteBtnActionPerformed

    private void ViewBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewBtnActionPerformed
        // TODO add your handling code here:
         int selectedRow = jTable.getSelectedRow(), col = 0;
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(this, "Please select at least a row.", "INFORMATION", JOptionPane.ERROR_MESSAGE);
            return;
        }
        for (Map.Entry<Integer, Customer> i : this.mapstore.getInstance().getCustomer().entrySet()) {
//            MapStory story = (MapStory)jTable.getValueAt(selectedRow,);
//            this.RightJPanel.add(new CustomerViewJPanel(this.RightJPanel, this.story));
//            CardLayout cLayout = (CardLayout) this.RightJPanel.getLayout();
//            cLayout.next(RightJPanel);

                Customer value = i.getValue();
                
                if(value.getUserID() == Integer.parseInt(jTable.getValueAt(selectedRow,0).toString())){
                    CustomerViewJPanel  panel = new  CustomerViewJPanel(RightJPanel,mapstore,value);
                    this.RightJPanel.add(panel);
                    CardLayout cLayout = (CardLayout) this.RightJPanel.getLayout();
                    cLayout.next(RightJPanel);
                }
        }
    }//GEN-LAST:event_ViewBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackBtn;
    private javax.swing.JButton CreateBtn;
    private javax.swing.JButton DeleteBtn;
    private javax.swing.JButton ViewBtn;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable;
    // End of variables declaration//GEN-END:variables
}
